/*
 * LIFF server API
 *
 * LIFF Server API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LiffBotPrompt : Specify the setting for bot link feature with one of the following values:  `normal`: Display the option to add the LINE Official Account as a friend in the channel consent screen. `aggressive`: Display a screen with the option to add the LINE Official Account as a friend after the channel consent screen. `none`: Don't display the option to add the LINE Official Account as a friend.   The default value is none. 
/// Specify the setting for bot link feature with one of the following values:  `normal`: Display the option to add the LINE Official Account as a friend in the channel consent screen. `aggressive`: Display a screen with the option to add the LINE Official Account as a friend after the channel consent screen. `none`: Don't display the option to add the LINE Official Account as a friend.   The default value is none. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LiffBotPrompt {
    #[serde(rename = "normal")]
    Normal,
    #[serde(rename = "aggressive")]
    Aggressive,
    #[serde(rename = "none")]
    None,

}

impl std::fmt::Display for LiffBotPrompt {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Normal => write!(f, "normal"),
            Self::Aggressive => write!(f, "aggressive"),
            Self::None => write!(f, "none"),
        }
    }
}

impl Default for LiffBotPrompt {
    fn default() -> LiffBotPrompt {
        Self::Normal
    }
}


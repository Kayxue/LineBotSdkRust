/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImagemapVideo {
    #[serde(rename = "originalContentUrl", skip_serializing_if = "Option::is_none")]
    pub original_content_url: Option<String>,
    #[serde(rename = "previewImageUrl", skip_serializing_if = "Option::is_none")]
    pub preview_image_url: Option<String>,
    #[serde(rename = "area", skip_serializing_if = "Option::is_none")]
    pub area: Option<Box<models::ImagemapArea>>,
    #[serde(rename = "externalLink", skip_serializing_if = "Option::is_none")]
    pub external_link: Option<Box<models::ImagemapExternalLink>>,
}

impl ImagemapVideo {
    pub fn new() -> ImagemapVideo {
        ImagemapVideo {
            original_content_url: None,
            preview_image_url: None,
            area: None,
            external_link: None,
        }
    }
}


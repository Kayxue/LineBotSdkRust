/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RichMenuBatchUnlinkOperation : Unlink the rich menu for all users linked to the rich menu specified in the `from` property.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RichMenuBatchUnlinkOperation {
    /// The type of operation to the rich menu linked to the user. One of link, unlink, or unlinkAll.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "from")]
    pub from: String,
}

impl RichMenuBatchUnlinkOperation {
    /// Unlink the rich menu for all users linked to the rich menu specified in the `from` property.
    pub fn new(r#type: String, from: String) -> RichMenuBatchUnlinkOperation {
        RichMenuBatchUnlinkOperation {
            r#type: Some(r#type),
            from,
        }
    }
}

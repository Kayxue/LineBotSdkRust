/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubscriptionPeriodDemographic {
    #[serde(rename = "day_7")]
    Day7,
    #[serde(rename = "day_30")]
    Day30,
    #[serde(rename = "day_90")]
    Day90,
    #[serde(rename = "day_180")]
    Day180,
    #[serde(rename = "day_365")]
    Day365,

}

impl std::fmt::Display for SubscriptionPeriodDemographic {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Day7 => write!(f, "day_7"),
            Self::Day30 => write!(f, "day_30"),
            Self::Day90 => write!(f, "day_90"),
            Self::Day180 => write!(f, "day_180"),
            Self::Day365 => write!(f, "day_365"),
        }
    }
}

impl Default for SubscriptionPeriodDemographic {
    fn default() -> SubscriptionPeriodDemographic {
        Self::Day7
    }
}


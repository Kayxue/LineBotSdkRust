/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TestWebhookEndpointResponse {
    /// Result of the communication from the LINE platform to the webhook URL.
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
    /// Time of the event in milliseconds. Even in the case of a redelivered webhook, it represents the time the event occurred, not the time it was redelivered. 
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    /// The HTTP status code. If the webhook response isn't received, the status code is set to zero or a negative number.
    #[serde(rename = "statusCode")]
    pub status_code: i32,
    /// Reason for the response.
    #[serde(rename = "reason")]
    pub reason: String,
    /// Details of the response.
    #[serde(rename = "detail")]
    pub detail: String,
}

impl TestWebhookEndpointResponse {
    pub fn new(timestamp: String, status_code: i32, reason: String, detail: String) -> TestWebhookEndpointResponse {
        TestWebhookEndpointResponse {
            success: None,
            timestamp,
            status_code,
            reason,
            detail,
        }
    }
}


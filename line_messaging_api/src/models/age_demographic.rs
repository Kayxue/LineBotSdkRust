/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AgeDemographic {
    #[serde(rename = "age_15")]
    Age15,
    #[serde(rename = "age_20")]
    Age20,
    #[serde(rename = "age_25")]
    Age25,
    #[serde(rename = "age_30")]
    Age30,
    #[serde(rename = "age_35")]
    Age35,
    #[serde(rename = "age_40")]
    Age40,
    #[serde(rename = "age_45")]
    Age45,
    #[serde(rename = "age_50")]
    Age50,
    #[serde(rename = "age_55")]
    Age55,
    #[serde(rename = "age_60")]
    Age60,
    #[serde(rename = "age_65")]
    Age65,
    #[serde(rename = "age_70")]
    Age70,

}

impl std::fmt::Display for AgeDemographic {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Age15 => write!(f, "age_15"),
            Self::Age20 => write!(f, "age_20"),
            Self::Age25 => write!(f, "age_25"),
            Self::Age30 => write!(f, "age_30"),
            Self::Age35 => write!(f, "age_35"),
            Self::Age40 => write!(f, "age_40"),
            Self::Age45 => write!(f, "age_45"),
            Self::Age50 => write!(f, "age_50"),
            Self::Age55 => write!(f, "age_55"),
            Self::Age60 => write!(f, "age_60"),
            Self::Age65 => write!(f, "age_65"),
            Self::Age70 => write!(f, "age_70"),
        }
    }
}

impl Default for AgeDemographic {
    fn default() -> AgeDemographic {
        Self::Age15
    }
}


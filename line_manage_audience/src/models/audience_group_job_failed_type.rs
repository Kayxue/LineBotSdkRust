/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AudienceGroupJobFailedType : Failed type
/// Failed type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AudienceGroupJobFailedType {
    #[serde(rename = "INTERNAL_ERROR")]
    InternalError,
    #[serde(rename = "AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT")]
    AudienceGroupAudienceInsufficient,

}

impl std::fmt::Display for AudienceGroupJobFailedType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::InternalError => write!(f, "INTERNAL_ERROR"),
            Self::AudienceGroupAudienceInsufficient => write!(f, "AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT"),
        }
    }
}

impl Default for AudienceGroupJobFailedType {
    fn default() -> AudienceGroupJobFailedType {
        Self::InternalError
    }
}


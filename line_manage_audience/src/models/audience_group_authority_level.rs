/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AudienceGroupAuthorityLevel : authority level
/// authority level
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AudienceGroupAuthorityLevel {
    #[serde(rename = "PUBLIC")]
    Public,
    #[serde(rename = "PRIVATE")]
    Private,

}

impl std::fmt::Display for AudienceGroupAuthorityLevel {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Public => write!(f, "PUBLIC"),
            Self::Private => write!(f, "PRIVATE"),
        }
    }
}

impl Default for AudienceGroupAuthorityLevel {
    fn default() -> AudienceGroupAuthorityLevel {
        Self::Public
    }
}


/*
 * LIFF server API
 *
 * LIFF Server API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LiffScope : Array of scopes required for some LIFF SDK methods to function. The default value is `[\"profile\", \"chat_message.write\"]`.  
/// Array of scopes required for some LIFF SDK methods to function. The default value is `[\"profile\", \"chat_message.write\"]`.  
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LiffScope {
    #[serde(rename = "openid")]
    Openid,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "profile")]
    Profile,
    #[serde(rename = "chat_message.write")]
    ChatMessagePeriodWrite,

}

impl std::fmt::Display for LiffScope {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Openid => write!(f, "openid"),
            Self::Email => write!(f, "email"),
            Self::Profile => write!(f, "profile"),
            Self::ChatMessagePeriodWrite => write!(f, "chat_message.write"),
        }
    }
}

impl Default for LiffScope {
    fn default() -> LiffScope {
        Self::Openid
    }
}


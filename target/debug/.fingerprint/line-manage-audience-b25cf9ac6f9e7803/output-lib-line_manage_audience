{"$message_type":"diagnostic","message":"unresolved import `hyper_tls`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"line_manage_audience/src/apis/configuration.rs","byte_start":195,"byte_end":204,"line_start":12,"line_end":12,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use hyper_tls::HttpsConnector;","highlight_start":5,"highlight_end":14}],"label":"use of unresolved module or unlinked crate `hyper_tls`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"line_manage_audience/src/apis/configuration.rs","byte_start":195,"byte_end":204,"line_start":12,"line_end":12,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use hyper_tls::HttpsConnector;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"hyper_util","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `hyper_tls`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mline_manage_audience/src/apis/configuration.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse hyper_tls::HttpsConnector;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of unresolved module or unlinked crate `hyper_tls`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;9mhyper_tls\u001b[0m\u001b[0m::HttpsConnector;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mhyper_util\u001b[0m\u001b[0m::HttpsConnector;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable call","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":2249,"byte_end":2264,"line_start":56,"line_end":56,"column_start":19,"column_end":34,"is_primary":true,"text":[{"text":"        req = req.with_form_param(\"file\".to_string(), unimplemented!());","highlight_start":19,"highlight_end":34}],"label":"unreachable call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kay/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":27931,"byte_end":27974,"line_start":810,"line_end":810,"column_start":9,"column_end":52,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not implemented\")","highlight_start":9,"highlight_end":52}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":2285,"byte_end":2301,"line_start":56,"line_end":56,"column_start":55,"column_end":71,"is_primary":false,"text":[{"text":"        req = req.with_form_param(\"file\".to_string(), unimplemented!());","highlight_start":55,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unimplemented!","def_site_span":{"file_name":"/Users/kay/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":27882,"byte_end":27908,"line_start":808,"line_end":808,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! unimplemented {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mline_manage_audience/src/apis/manage_audience_blob_api.rs:56:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        req = req.with_form_param(\"file\".to_string(), unimplemented!());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable call\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable call","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":3312,"byte_end":3327,"line_start":75,"line_end":75,"column_start":19,"column_end":34,"is_primary":true,"text":[{"text":"        req = req.with_form_param(\"file\".to_string(), unimplemented!());","highlight_start":19,"highlight_end":34}],"label":"unreachable call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kay/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":27931,"byte_end":27974,"line_start":810,"line_end":810,"column_start":9,"column_end":52,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not implemented\")","highlight_start":9,"highlight_end":52}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":3348,"byte_end":3364,"line_start":75,"line_end":75,"column_start":55,"column_end":71,"is_primary":false,"text":[{"text":"        req = req.with_form_param(\"file\".to_string(), unimplemented!());","highlight_start":55,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unimplemented!","def_site_span":{"file_name":"/Users/kay/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":27882,"byte_end":27908,"line_start":808,"line_end":808,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! unimplemented {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mline_manage_audience/src/apis/manage_audience_blob_api.rs:75:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        req = req.with_form_param(\"file\".to_string(), unimplemented!());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable call\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `file`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":1619,"byte_end":1623,"line_start":47,"line_end":47,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"    fn add_user_ids_to_audience(&self, file: std::path::PathBuf, audience_group_id: Option<i64>, upload_description: Option<&str>) -> Pin<Box<dyn Future<Output = Result<(), Error>> + Send>> {","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":1619,"byte_end":1623,"line_start":47,"line_end":47,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"    fn add_user_ids_to_audience(&self, file: std::path::PathBuf, audience_group_id: Option<i64>, upload_description: Option<&str>) -> Pin<Box<dyn Future<Output = Result<(), Error>> + Send>> {","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":"_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `file`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mline_manage_audience/src/apis/manage_audience_blob_api.rs:47:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn add_user_ids_to_audience(&self, file: std::path::PathBuf, audience_group_id: Option<i64>, upload_description: Option<&str>) -> Pin\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_file`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `file`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":2476,"byte_end":2480,"line_start":63,"line_end":63,"column_start":54,"column_end":58,"is_primary":true,"text":[{"text":"    fn create_audience_for_uploading_user_ids(&self, file: std::path::PathBuf, description: Option<&str>, is_ifa_audience: Option<bool>, upload_description: Option<&str>) -> Pin<Box<dyn Future<Output = Result<models::CreateAudienceGroupResponse, Error>> + Send>> {","highlight_start":54,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"line_manage_audience/src/apis/manage_audience_blob_api.rs","byte_start":2476,"byte_end":2480,"line_start":63,"line_end":63,"column_start":54,"column_end":58,"is_primary":true,"text":[{"text":"    fn create_audience_for_uploading_user_ids(&self, file: std::path::PathBuf, description: Option<&str>, is_ifa_audience: Option<bool>, upload_description: Option<&str>) -> Pin<Box<dyn Future<Output = Result<models::CreateAudienceGroupResponse, Error>> + Send>> {","highlight_start":54,"highlight_end":58}],"label":null,"suggested_replacement":"_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `file`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mline_manage_audience/src/apis/manage_audience_blob_api.rs:63:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn create_audience_for_uploading_user_ids(&self, file: std::path::PathBuf, description: Option<&str>, is_ifa_audience: Option<bool>, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_file`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 4 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error; 4 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0432`.\u001b[0m\n"}

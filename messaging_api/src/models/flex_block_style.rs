/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FlexBlockStyle {
    #[serde(rename = "backgroundColor", skip_serializing_if = "Option::is_none")]
    pub background_color: Option<String>,
    #[serde(rename = "separator", skip_serializing_if = "Option::is_none")]
    pub separator: Option<bool>,
    #[serde(rename = "separatorColor", skip_serializing_if = "Option::is_none")]
    pub separator_color: Option<String>,
}

impl FlexBlockStyle {
    pub fn new() -> FlexBlockStyle {
        FlexBlockStyle {
            background_color: None,
            separator: None,
            separator_color: None,
        }
    }
}


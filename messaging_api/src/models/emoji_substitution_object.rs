/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EmojiSubstitutionObject : An object representing a emoji substitution.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmojiSubstitutionObject {
    /// Type of substitution object
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "productId")]
    pub product_id: String,
    #[serde(rename = "emojiId")]
    pub emoji_id: String,
}

impl EmojiSubstitutionObject {
    /// An object representing a emoji substitution.
    pub fn new(r#type: String, product_id: String, emoji_id: String) -> EmojiSubstitutionObject {
        EmojiSubstitutionObject {
            r#type: Some(r#type),
            product_id,
            emoji_id,
        }
    }
}

/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AudienceGroupJob : Audience group job
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AudienceGroupJob {
    /// A job ID.
    #[serde(rename = "audienceGroupJobId", skip_serializing_if = "Option::is_none")]
    pub audience_group_job_id: Option<i64>,
    /// An audience ID.
    #[serde(rename = "audienceGroupId", skip_serializing_if = "Option::is_none")]
    pub audience_group_id: Option<i64>,
    /// The job's description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::AudienceGroupJobType>,
    #[serde(rename = "jobStatus", skip_serializing_if = "Option::is_none")]
    pub job_status: Option<models::AudienceGroupJobStatus>,
    #[serde(rename = "failedType", skip_serializing_if = "Option::is_none")]
    pub failed_type: Option<models::AudienceGroupJobFailedType>,
    /// The number of accounts (recipients) that were added or removed.
    #[serde(rename = "audienceCount", skip_serializing_if = "Option::is_none")]
    pub audience_count: Option<i64>,
    /// When the job was created (in UNIX time).
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i64>,
}

impl AudienceGroupJob {
    /// Audience group job
    pub fn new() -> AudienceGroupJob {
        AudienceGroupJob {
            audience_group_job_id: None,
            audience_group_id: None,
            description: None,
            r#type: None,
            job_status: None,
            failed_type: None,
            audience_count: None,
            created: None,
        }
    }
}


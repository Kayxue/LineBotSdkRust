/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AudienceGroupJobStatus : Job status
/// Job status
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AudienceGroupJobStatus {
    #[serde(rename = "QUEUED")]
    Queued,
    #[serde(rename = "WORKING")]
    Working,
    #[serde(rename = "FINISHED")]
    Finished,
    #[serde(rename = "FAILED")]
    Failed,

}

impl std::fmt::Display for AudienceGroupJobStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Queued => write!(f, "QUEUED"),
            Self::Working => write!(f, "WORKING"),
            Self::Finished => write!(f, "FINISHED"),
            Self::Failed => write!(f, "FAILED"),
        }
    }
}

impl Default for AudienceGroupJobStatus {
    fn default() -> AudienceGroupJobStatus {
        Self::Queued
    }
}

